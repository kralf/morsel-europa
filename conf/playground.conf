#-------------------------------------------------------------------------------
# Framework
#-------------------------------------------------------------------------------

#framework.debug         = True
framework.maxFrameRate  = 60.0
framework.showFrameRate = True
framework.include("morsel-europa")

#-------------------------------------------------------------------------------
# Environment
#-------------------------------------------------------------------------------

world = World(
  physics = "ode"
)

Scene(
  name  = "Playground",
  model = "playground"
)

#-------------------------------------------------------------------------------
# Lighting
#-------------------------------------------------------------------------------

Light(
  type = "AmbientLight",
  name = "Ambient"
)

Light(
  type     = "PointLight",
  name     = "Sun",
  position = [10, 20, 30]
)

#-------------------------------------------------------------------------------
# World Objects
#-------------------------------------------------------------------------------

ball = Actor(
  name     = "Ball",
  model    = "ball",
  position = [0, 5, 0.2]
)

crate = Actor(
  name        = "Crate",
  model       = "crate",
  position    = [7.5, 0, 0.75],
  orientation = [10, 0, 0]
)

trash = Actor(
  name        = "Trash",
  model       = "trash_bin",
  position    = [6, 6, 0.1],
  orientation = [25, 0, 0]
)

car = Actor(
  name     = "Car",
  model    = "alfa_romeo_147",
  position = [10, 0, 0.3],
)

robot = Actor(
  name     = "Robot",
  model    = "robot",
  position = [8, -8, 1]
)

platform = Platform(
  name        = "Platform",
  model       = "europa",
  position    = [1, 0, 0.3],
  orientation = [180, 0, 0]
)

#platform.collider.show()

#-------------------------------------------------------------------------------
# Sensors
#-------------------------------------------------------------------------------

frontLaser = Sensor(
  name        = "FrontLaser",
  model       = "sick_lms100",
  parent      = platform,
  position    = [0.28, 0, 0.4],
  orientation = [0, 180, 0]
)

rearLaser = Sensor(
  name        = "RearLaser",
  model       = "sick_lms100",
  parent      = platform,
  position    = [-0.28, 0, 0.4],
  orientation = [180, 180, 0]
)

downLaser = Sensor(
  name        = "DownLaser",
  model       = "sick_lms100",
  parent      = platform,
  position    = [0.35, 0, 0.6],
  orientation = [0, 0, 70]
)

#-------------------------------------------------------------------------------
# Views
#-------------------------------------------------------------------------------

#View(
#  name       = "LaserView",
#  type       = "LaserView",
#  sensor     = laser,
#  showPoints = True
#)

#-------------------------------------------------------------------------------
# Control
#-------------------------------------------------------------------------------

Controller(
  name     = "CarController",
  model    = "path",
  path     = "playground/car.pth",
  actor    = car,
  position = [0, 0, 0.3],
  velocity = 5
)

Controller(
  name     = "RobotController",
  model    = "path",
  path     = "playground/robot.pth",
  actor    = robot,
  position = [0, 0, 1],
  velocity = 1
)

#Controller(
#  name  = "PlatformController",
#  model = "keyboard",
#  platform = platform
#)

#-------------------------------------------------------------------------------
# Camera
#-------------------------------------------------------------------------------

Camera(
  position = [-10, 0, 5],
  object   = platform,
  rotate   = False
)

#-------------------------------------------------------------------------------
# MOOS modules
#-------------------------------------------------------------------------------

velocity_command = Input(
  type     = "VelocityCommand",
  name     = "MOOS velocity command",
  platform = platform,
  period   = 0.01
)

odometry = Output(
  type     = "Odometry",
  name     = "MOOS odometry",
  platform = platform,
  period   = 0.01
)

#laser = Output(
#  type   = "Laser",
#  name   = "MOOS laser",
#  sensor = laser,
#  period = 0.01
#)
