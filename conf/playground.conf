#-------------------------------------------------------------------------------
# Framework
#-------------------------------------------------------------------------------

framework.include("morsel-europa")

#-------------------------------------------------------------------------------
# Environment
#-------------------------------------------------------------------------------

world = World(
  physics = "ode"
)

Scene(
  model = "playground"
)

#-------------------------------------------------------------------------------
# Lighting
#-------------------------------------------------------------------------------

Light(
  type = "AmbientLight",
)

Light(
  type     = "PointLight",
  name     = "Sun",
  position = [10, 20, 30]
)

#-------------------------------------------------------------------------------
# World Objects
#-------------------------------------------------------------------------------

ball = Actor(
  name     = "Ball",
  model    = "ball",
  position = [0, 5, 0.2]
)

crate = Actor(
  name        = "Crate",
  model       = "crate",
  position    = [7.5, 0, 0],
  orientation = [10, 0, 0]
)

trash = Actor(
  name        = "Trash",
  model       = "trash_bin",
  position    = [6, 6, 0.1],
  orientation = [25, 0, 0]
)

car = Actor(
  name        = "Car",
  model       = "alfa_romeo_147",
  position    = [10, 0, 0.3],
)

robot = Actor(
  name      = "Robot",
  model     = "robot",
  position  = [8, -8, 1]
)

platform = Platform(
  name        = "Platform",
  model       = "europa",
  position    = [1, 0, 0.3],
  orientation = [180, 0, 0]
)

#-------------------------------------------------------------------------------
# Sensors
#-------------------------------------------------------------------------------

imu = Sensor(
  name        = "IMU",
  model       = "xsens_mti",
  anchor      = platform
)

frontLaser = Sensor(
  name        = "FrontLaser",
  model       = "sick_lms100",
  anchor      = platform,
  position    = [0.28, 0, 0.4],
  orientation = [0, 0, 180]
)

rearLaser = Sensor(
  name        = "RearLaser",
  model       = "sick_lms100",
  anchor      = platform,
  position    = [-0.28, 0, 0.4],
  orientation = [180, 0, 180]
)

downLaser = Sensor(
  name        = "DownLaser",
  model       = "sick_lms100",
  anchor      = platform,
  position    = [0.35, 0, 0.6],
  orientation = [0, 70, 0]
)

#-------------------------------------------------------------------------------
# Views
#-------------------------------------------------------------------------------

View(
  name       = "FrontLaserView",
  type       = "LaserView",
  sensor     = frontLaser
)

View(
  name       = "RearLaserView",
  type       = "LaserView",
  sensor     = rearLaser
)

View(
  name       = "DownLaserView",
  type       = "LaserView",
  sensor     = downLaser
)

#-------------------------------------------------------------------------------
# Control
#-------------------------------------------------------------------------------

robot_path = Path(
  filename = "playground/robot.pth",
  position = [0, 0, 1]
)

Controller(
  model    = "path",
  actor    = robot,
  path     = robot_path,
  velocity = 1
)

#-------------------------------------------------------------------------------
# Camera
#-------------------------------------------------------------------------------

Camera(
  position = [-8, 0, 3],
  object   = platform,
  rotate   = False
)

#-------------------------------------------------------------------------------
# MOOS Client
#-------------------------------------------------------------------------------

client = MOOSClient(
  name       = "MorselEUROPA",
  serverHost = "localhost",
  serverPort = "9000",
  commTick   = "10"
)

#-------------------------------------------------------------------------------
# Europa Publishers and Receivers
#-------------------------------------------------------------------------------

Input(
  type     = "EuropaVelocityCommand",
  client   = client,
  platform = platform
)

Output(
  type     = "EuropaOdometry",
  client   = client,
  platform = platform
)

Output(
  type    = "EuropaLaser",
  client  = client,
  sensor  = frontLaser,
  message = "LMS_FRONT",
  flip    = True
)

Output(
  type    = "EuropaLaser",
  client  = client,
  sensor  = rearLaser,
  message = "LMS_REAR",
  flip    = True
)

Output(
  type    = "EuropaLaser",
  client  = client,
  sensor  = downLaser,
  message = "LMS_DOWN"
)

Output(
  type     = "EuropaIMU",
  client   = client,
  sensor   = imu,
  platform = platform
)

Output(
  type     = "Europa6DOFOdometry",
  client   = client,
  platform = platform
)
